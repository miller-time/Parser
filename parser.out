Created by PLY version 3.3 (http://www.dabeaz.com/ply)

Grammar

Rule 0     S' -> statement
Rule 1     statement -> expression
Rule 2     expression -> KARMABOT COLON THING
Rule 3     expression -> up
Rule 4     expression -> down
Rule 5     down -> KARMABOT COLON THING PLUS PLUS
Rule 6     up -> THING MINUS MINUS

Terminals, with rules where they appear

COLON                : 2 5
KARMABOT             : 2 5
MINUS                : 6 6
PLUS                 : 5 5
THING                : 2 5 6
error                : 

Nonterminals, with rules where they appear

down                 : 4
expression           : 1
statement            : 0
up                   : 3

Parsing method: LALR

state 0

    (0) S' -> . statement
    (1) statement -> . expression
    (2) expression -> . KARMABOT COLON THING
    (3) expression -> . up
    (4) expression -> . down
    (6) up -> . THING MINUS MINUS
    (5) down -> . KARMABOT COLON THING PLUS PLUS

    KARMABOT        shift and go to state 5
    THING           shift and go to state 3

    down                           shift and go to state 2
    expression                     shift and go to state 6
    up                             shift and go to state 1
    statement                      shift and go to state 4

state 1

    (3) expression -> up .

    $end            reduce using rule 3 (expression -> up .)


state 2

    (4) expression -> down .

    $end            reduce using rule 4 (expression -> down .)


state 3

    (6) up -> THING . MINUS MINUS

    MINUS           shift and go to state 7


state 4

    (0) S' -> statement .



state 5

    (2) expression -> KARMABOT . COLON THING
    (5) down -> KARMABOT . COLON THING PLUS PLUS

    COLON           shift and go to state 8


state 6

    (1) statement -> expression .

    $end            reduce using rule 1 (statement -> expression .)


state 7

    (6) up -> THING MINUS . MINUS

    MINUS           shift and go to state 9


state 8

    (2) expression -> KARMABOT COLON . THING
    (5) down -> KARMABOT COLON . THING PLUS PLUS

    THING           shift and go to state 10


state 9

    (6) up -> THING MINUS MINUS .

    $end            reduce using rule 6 (up -> THING MINUS MINUS .)


state 10

    (2) expression -> KARMABOT COLON THING .
    (5) down -> KARMABOT COLON THING . PLUS PLUS

    $end            reduce using rule 2 (expression -> KARMABOT COLON THING .)
    PLUS            shift and go to state 11


state 11

    (5) down -> KARMABOT COLON THING PLUS . PLUS

    PLUS            shift and go to state 12


state 12

    (5) down -> KARMABOT COLON THING PLUS PLUS .

    $end            reduce using rule 5 (down -> KARMABOT COLON THING PLUS PLUS .)

